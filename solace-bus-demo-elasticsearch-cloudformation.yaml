AWSTemplateFormatVersion: 2010-09-09
Description: >
  Creates a complete AWS Stack for the Solace Bus Demo including: Map UI,
  Backend Geo Services, AWS Elastic Search domain with a fully configured
  instance of Kibana.
Metadata:
  'AWS::CloudFormation::Designer':
    c55898ea-8649-463f-89dd-54a2a7de52f0:
      size:
        width: 60
        height: 60
      position:
        x: 510
        'y': 120
      z: 0
      embeds: []
    372ea895-df4f-4ca2-b669-c515338caa1e:
      size:
        width: 60
        height: 60
      position:
        x: 340
        'y': 120
      z: 0
      embeds: []
      dependson:
        - 2928286c-e32f-4e92-be52-772131830be4
Resources:
  SolaceBusDemoESDomain:
    Type: AWS::Elasticsearch::Domain
    Properties:
      ElasticsearchVersion: '7.1'
      ElasticsearchClusterConfig:
        InstanceType: t2.small.elasticsearch
        InstanceCount: 1
        DedicatedMasterEnabled: true
        DedicatedMasterType: t2.small.elasticsearch
        DedicatedMasterCount: 3
      EBSOptions:
        EBSEnabled: true
        VolumeType: gp2
        VolumeSize: 10
      AccessPolicies:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS: '*'
          Action: es:*
          Resource: '*'
      Tags:
        - Key: Notice
          Value: Created by Solace Bus Demo CloudFormation Template
    Metadata:
      'AWS::CloudFormation::Designer':
        id: c55898ea-8649-463f-89dd-54a2a7de52f0
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action: es:*
            Resource: '*'
      DependsOn: SolaceBusDemoESDomain
  ESDomainConfigLambda:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.7
      Timeout: 30
      Handler: lambda_function.lambda_handler
      Description: Invoked to configure Elastic Searcn & Kibana once the Elastic Search Domain is setup.
      Code:
        ZipFile: |
          import urllib.request
          import boto3
          import os
          import cfn-response

          s3 = boto3.client('s3')

          def lambda_handler(event, context):
   
            # Get the object & key (i.e. the location) of our config file
            bucket = event['Properties']['BUS_DEMO_S3_BUCKET']
            key = event['Properties']['KIBANA_CONFIG_S3_OBJECT_KEY']
    
            try:
                
                s3doc = s3.get_object(Bucket=bucket, Key=key)
                reqdata=s3doc['Body'].read()
   
                #Setup the request to Kibana
                kibana_endpoint = event['Properties']['KIBANA_ENDPOINT']
                req = urllib.request.Request(kibana_endpoint,reqdata)
                req.add_header('Content-Type','application/json')
                req.add_header('kbn-xsrf','true')
        
                #send it in
                response=urllib.request.urlopen(req)
                
                #Reply back to CloudFormation
                responseData = {}
                responseData ['Data'] = response.read()
                cfnresponse.send(event,context,cfnresponse.SUCCESS,responseData)

                #return the response
                return responseData['Data']
            except Exception as e:
                print(e)

                #Prepare the error response for CloudFormation
                errorResponseData = {}
                errorResponseData ['Data'] = e 
                cfnresponse.send(event,contect,cfnresponse.FAILED,errorResponseData)
                raise e
      Role: !GetAtt LambdaExecutionRole.Arn
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 372ea895-df4f-4ca2-b669-c515338caa1e
    DependsOn:
      - LambdaExecutionRole
  #We use a CustomResource to execute the Lambda defined above.
  ExecESDomainConfigLambda:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt ESDomainConfigLambda.Arn
      BUS_DEMO_S3_BUCKET: bus-demo-resources
      KIBANA_CONFIG_S3_OBJECT_KEY: bus-demo-kibana-object-export.json
      KIBANA_ENDPOINT: !Sub 
        - ${kibana_base_uri}/_plugin/kibana/api/saved_objects/_bulk_create
        - {kibana_base_uri: !GetAtt SolaceBusDemoESDomain.DomainEndpoint}
    DependsOn:
      - ESDomainConfigLambda